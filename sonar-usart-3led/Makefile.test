# -*- mode: Makefile -*-
current_makefile = $(word $(words $(MAKEFILE_LIST)), $(MAKEFILE_LIST))
makefile_name := $(current_makefile)

include ../Makefile.inc

SUBDIRS = ../utils

HEADERS = \
	bit-ops.h \
	rgb-led.h

TEST_BIT_OPS_SRCS = \
	bit-ops.c \
	test-bit-ops.c

TEST_BIT_OPS_OBJS = \
	$(TEST_BIT_OPS_SRCS:%.c=%.o)

TEST_BIT_OPS_EXE = \
	test-bit-ops

TEST_RGB_LED_SRCS = \
	bit-ops.c \
	rgb-led.c \
	test-rgb-led.c

TEST_RGB_LED_OBJS = \
	$(TEST_RGB_LED_SRCS:%.c=%.o)

TEST_RGB_LED_EXE = \
	test-rgb-led

TEST_SONAR_STRING_SRCS = \
	sonar-string.c \
	test-sonar-string.c

TEST_SONAR_STRING_OBJS = \
	$(TEST_SONAR_STRING_SRCS:%.c=%.o)

TEST_SONAR_STRING_EXE = \
	test-sonar-string

CMOCKA_INCLUDE_DIR=../3rd-party/build-Debug/include
CMOCKA_LIBRARY=../3rd-party/build-Debug/lib/libcmocka.a

CC = cc
CFLAGS = -std=c11 -g -I$(CMOCKA_INCLUDE_DIR)

# MAKECMDGOALS is the make option: make 'clobber' or 'all'
TARGET = $(MAKECMDGOALS)

#
# macro for executing TARGET in all SUBDIRS
#
ifdef SUBDIRS
$(SUBDIRS) : FORCE
	@if [ -d $@ ]; then \
		$(MAKE) --file $(makefile_name) --directory=$@ $(TARGET); \
	fi	
endif	
	@echo Build complete: $@ : $(shell date)

all : $(SUBDIRS)

#
# Generic rule to generate objects
#
%.o : %.c $(HEADERS)
	$(CC) $(CFLAGS) -c -o $@ $<

test-sonar-string : $(TEST_SONAR_STRING_OBJS)
	$(CC) $(CMOCKA_LIBRARY) $(TEST_SONAR_STRING_OBJS) -o $@

test : $(SUBDIRS) $(TEST_SONAR_STRING_EXE)
	./test-sonar-string

clean : $(SUBDIRS)
	rm -rf *~ *.o lfuse.hex hfuse.hex efuse.hex $(HEX) $(ELF) $(TEST_SONAR_STRING_EXE)

